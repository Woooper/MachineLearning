import pandas as pd
from sklearn.model_selection import train_test_split
hit = pd.read_csv('Hitters.csv')
df = hit.copy()
df = df.dropna()
dms = pd.get_dummies(df[['League','Division','NewLeague']])
y = df['Salary']
X_=df.drop(['Salary','League','Division','NewLeague'],axis=1).astype('float64')
X=pd.concat([X_,dms[['League_N','Division_W','NewLeague_N']]],axis=1)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=42)
from sklearn.cross_decomposition import PLSRegression,PLSSVD
pls_model = PLSRegression(n_components=2).fit(X_train,y_train)
pls_model.predict(X_train)
y_pred = pls_model.predict(X_train)
from sklearn.metrics import mean_squared_error

import numpy as np 
np.sqrt(mean_squared_error(y_train,y_pred))
from sklearn.metrics import r2_score
r2_score(y_train,y_pred)

y_pred = pls_model.predict(X_test)
np.sqrt(mean_squared_error(y_test,y_pred))

from sklearn.model_selection import KFold
cv_10 = KFold(n_splits=10,shuffle=True,random_state=1)
RMSE = []
from sklearn.model_selection import cross_val_score
for i in np.arange(1,X_train.shape[1]+1):
    pls = PLSRegression(n_components = i)
    score = np.sqrt(-1*cross_val_score(pls,X_train,y_train,cv=cv_10,scoring='neg_mean_squared_error')).mean()
    RMSE.append(score)

import matplotlib.pyplot as plt
plt.plot(np.arange(1,X_train.shape[1]+1),np.array(RMSE),'-v',c='r')


