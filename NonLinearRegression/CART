import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split,ShuffleSplit,GridSearchCV, cross_val_score
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import scale
from sklearn import model_selection
from sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier

hit = pd.read_csv('Hitters.csv')
df = hit.copy()
df = df.dropna()
dms = pd.get_dummies(df[['League','Division','NewLeague']])
y = df['Salary']
X_ = df.drop(['Salary','Division','NewLeague','League'],axis=1).astype('float64')
X = pd.concat([X_,dms[['League_N','Division_W','NewLeague_N']]],axis=1)
x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=42)

x_train = pd.DataFrame(x_train['Hits'])
x_test = pd.DataFrame(x_test['Hits'])

cart_model = DecisionTreeRegressor(max_leaf_nodes=10)
cart_model.fit(x_train,y_train)

from skompiler import skompile
y_pred = cart_model.predict(x_test)

np.sqrt(mean_squared_error(y_test,y_pred))

cart_params = {'min_samples_split' : range(2,20),
'max_leaf_nodes': range(2,20)}
         
cart_cv_model = GridSearchCV(cart_model,cart_params,cv=10)
cart_cv_model.fit(x_train,y_train)

cart_tuned = DecisionTreeRegressor(max_leaf_nodes = 9,min_samples_split=76)
y_pred = cart_tuned.predict(x_test)
np.sqrt(mean_squared_error(y_test,y_pred))

