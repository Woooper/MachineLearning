import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split,ShuffleSplit,GridSearchCV, cross_val_score
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import scale
from sklearn import model_selection

hit  = pd.read_csv('Hitters.csv')
df = hit.copy()
df = df.dropna()
dms = pd.get_dummies(df[['League','Division','NewLeague']])
y = df['Salary']
X_ = df.drop(['Salary','League','Division','NewLeague'],axis=1).astype('float64')
X = pd.concat([X_,dms[['League_N','Division_W','NewLeague_N']]],axis=1)
x_train,x_test,y_train,y_test = train_test_split(X,y,random_state=42,test_size=0.25)

x_train = pd.DataFrame(x_train['Hits'])
x_test = pd.DataFrame(x_test['Hits'])

from sklearn.svm import SVR

svr_model = SVR('linear').fit(x_train,y_train)

y_pred = svr_model.predict(x_train)

from sklearn.linear_model import LinearRegression
lm_model = LinearRegression().fit(x_train,y_train)
lm_pred = lm_model.predict(x_train)
print('y_{0} + {1} x '.format(lm_model.intercept_,lm_model.coef_[0]))

y_pred = svr_model.predict(x_test)

svr_params = {'C':np.arange(0.1,2,0.1)}
svr_cv_model = GridSearchCV(svr_model,svr_params, cv=10).fit(x_train,y_train)

svr_tuned = SVR('linear',
                C=pd.Series(svr_cv_model.best_params_)[0]).fit(x_train,y_train)
                
y_pred = svr_tuned.predict(x_test)

np.sqrt(mean_squared_error(y_test,y_pred))

