import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split,ShuffleSplit,GridSearchCV, cross_val_score
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import scale
from sklearn import model_selection

hit = pd.read_csv('Hitters.csv')
df = hit.copy()
df = df.dropna()
dms = pd.get_dummies(df[['League','Division','NewLeague']])
y = df['Salary']
X_ = df.drop(['Salary','Division','NewLeague','League'],axis=1).astype('float64')
X = pd.concat([X_,dms[['League_N','Division_W','NewLeague_N']]],axis=1)
x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=42)

from sklearn.ensemble import RandomForestRegressor
rf_model = RandomForestRegressor(random_state = 42)
rf_model.fit(x_train,y_train)
y_pred = rf_model.predict(x_test)

rf_params = {'max_depth':list(range(1,10)),
            'max_features':[3,5,10,15],
            'n_estimators':[100,200,500,1000,2000]}
            
rf_model = RandomForestRegressor(random_state=42)
rf_cv_model = GridSearchCV(rf_model,rf_params,cv=10,n_jobs=-1)
rf_cv_model.fit(x_train,y_train)

tuned_rf_model = RandomForestRegressor(random_state=42,max_depth=8,max_features = 3,n_estimators=200)
y_pred = tuned_rf_model.fit(x_train,y_train).predict(x_test)
Importance = pd.DataFrame({'Importance':tuned_rf_model.feature_importances_*100},
    index=x_train.columns)


