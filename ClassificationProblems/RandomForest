import numpy as np
import pandas as pd
import statsmodels.api as sm
import statsmodels.formula.api as smf
import seaborn as sns
from sklearn.preprocessing import scale
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,cross_val_predict
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report,log_loss
from sklearn.metrics import roc_auc_score,roc_curve
import matplotlib.pyplot as plt

from sklearn.ensemble import RandomForestClassifier

from warnings import filterwarnings
filterwarnings('ignore')

diabetes = pd.read_csv('Diabetes.csv')
df = diabetes.copy()
df= df.dropna()
y=df['Outcome']
x = df.drop (['Outcome'],axis = 1)
#x=df['Pregnancies']
#x=pd.DataFrame(x)
x_train,x_test,y_train,y_test = train_test_split(x,y,random_state = 42,test_size = 0.3)

rf_model = RandomForestClassifier().fit(x_train,y_train)

y_pred = rf_model.predict(x_test)

rf_grid={'n_estimators':[10,500,1000],
        'max_depth':[2,3,5,8,10],
        'min_samples_split':[2,5,10],
        'max_features':[2,5,8]}
        
rf_cv_model = GridSearchCV(rf_model,rf_grid,cv=10,n_jobs=-1,verbose=2)
rf_cv_model.fit(x_train,y_train)

rf_tuned = RandomForestClassifier(max_depth=8,
                                 max_features=5,
                                 min_samples_split=10,
                                 n_estimators=500)
                                 
rf_tuned.fit(x_train,y_train)

y_pred = rf_tuned.predict(x_test)
