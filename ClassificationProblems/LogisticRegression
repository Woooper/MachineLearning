import numpy as np
import pandas as pd
import statsmodels.api as sm
import statsmodels.formula.api as smf
import seaborn as sns
from sklearn.preprocessing import scale
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,cross_val_predict
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report,log_loss
from sklearn.metrics import roc_auc_score,roc_curve
import matplotlib.pyplot as plt

diabetes = pd.read_csv('Diabetes.csv')
df = diabetes.copy()
df= df.dropna()

y=df['Outcome']
x = df.drop (['Outcome'],axis = 1)

loj = sm.Logit(y,x)
loj_model = loj.fit()
loj_model.summary()

#scitic
from sklearn.linear_model import LogisticRegression
loj = LogisticRegression(solver='liblinear')
loj_model = loj.fit(x,y)

y_pred = loj_model.predict(x)

y_probs = loj_model.predict_proba(x)
y_probs = y_probs[:,1]

logit_roc_auc = roc_auc_score(y,loj_model.predict(x))
# area_under_curve
fpr,tpr,tresholds = roc_curve(y,loj_model.predict_proba(x)[:,1])
plt.plot(fpr,tpr)
plt.plot([0,1],[0,1])

x_train,x_test,y_train,y_test = train_test_split(x,y,random_state = 42,test_size = 0.25)

loj = LogisticRegression(solver='liblinear')
loj_model = loj.fit(x_train,y_train)
loj_model

accuracy_score(y_test,loj_model.predict(x_test))
