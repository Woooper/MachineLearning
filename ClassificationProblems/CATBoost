import numpy as np
import pandas as pd
import statsmodels.api as sm
import statsmodels.formula.api as smf
import seaborn as sns
from sklearn.preprocessing import scale
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score,cross_val_predict
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report,log_loss
from sklearn.metrics import roc_auc_score,roc_curve
import matplotlib.pyplot as plt
from catboost import CatBoostClassifier
from warnings import filterwarnings
filterwarnings('ignore')

diabetes = pd.read_csv('Diabetes.csv')
df = diabetes.copy()
df= df.dropna()
y=df['Outcome']
x = df.drop (['Outcome'],axis = 1)
#x=df['Pregnancies']
#x=pd.DataFrame(x)
x_train,x_test,y_train,y_test = train_test_split(x,y,random_state = 42,test_size = 0.3)

cb=CatBoostClassifier()
cb_model = cb.fit(x_train,y_train)
y_pred = cb_model.predict(x_test)
accuracy_score(y_pred,y_test)

catb_params={'iterations':[200,500],
            'learning_rate':[0.01,0.05,0.1],
            'depth':[3,5,8]}
            
catb_cv_model=GridSearchCV(cb,catb_params,cv=10,n_jobs=-1,verbose=2)

catb_cv_model.fit(x_train,y_train)
catb_tuned = CatBoostClassifier(depth=8,iterations=200,learning_rate=0.01)
catb_tuned.fit(x_train,y_train)
y_pred = catb_tuned.predict(x_test)
accuracy_score(y_test,y_pred)
